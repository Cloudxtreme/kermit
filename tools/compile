#!/usr/bin/env python


from __future__ import print_function
from __future__ import unicode_literals

import os
import sys


from kermit.parser import parse
from kermit.compiler import compile_ast


args = iter(sys.argv)
next(args)  # program name

arg = next(args, None)
if arg in (None, "-"):
    source = sys.stdin.read()
elif os.path.exists(arg):
    source = open(arg, "r").read()
else:
    source = arg

print("Source:")
for i, line in enumerate(source.split("\n")):
    print("{line:>3} {text}".format(line=(i + 1), text=line))
print()

bc = compile_ast(parse(source))

print("Bytecode:")
for i, line in enumerate(bc.dump().split("\n")):
    print("{line:>3} {text}".format(line=(i + 1), text=line))
print()

print("Functions:")
for i, func in enumerate(bc.functions):
    print(" {0}: {name}()".format(i, name=func.name))
    for j, line in enumerate(func.bc.dump().split("\n")):
        print("{line:>3} {text}".format(line=(i + 1), text=line))
